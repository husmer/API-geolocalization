package helpers

import (
	"encoding/json"
	"fmt"
	"groupie-tracker-geolocalization/data_structs"
	"net/http"
)

func LocationsToCoordinates(locations string) (float32, float32, error) {
	apikey := "AIzaSyAtXVNts14V8hmPnbC1tBsH0xnpRbIq97s"
	address := "https://maps.googleapis.com/maps/api/geocode/json?address=" + locations + "&key=" + apikey

	// send out a get request
	response, err := http.Get(address)
	if err != nil {
		return 0, 0, err
	}
	defer response.Body.Close()

	// check if the response status is OK (200)
	if response.StatusCode != http.StatusOK {
		return 0, 0, fmt.Errorf("API request failed with status code %d", response.StatusCode)
	}

	// parse JSON response into a struct
	var data data_structs.AutoGenerated
	err = json.NewDecoder(response.Body).Decode(&data)
	if err != nil {
		return 0, 0, err
	}

	// check if the API request was successful
	if data.Status != "OK" {
		return 0, 0, fmt.Errorf("geocoding API request failed with status: %s", data.Status)
	}

	// extract the latitude and longitude values
	lat := float32(data.Results[0].Geometry.Location.Lat)
	long := float32(data.Results[0].Geometry.Location.Lng)
	fmt.Printf("Latitude: %f, Longitude: %f\n", lat, long)
	fmt.Printf("https://www.google.com/maps/search/?api=1&query=%f,%f\n", lat, long)

	return lat, long, nil
}

// add coordinates to the artist

func AddCoordinates(artist *data_structs.ArtistWithRelations) error {
	// Access artist's Relations and DatesLocations
	relations := artist.Relations
	datesLocations := relations.DatesLocations

	// Initialize Coordinates map
	coordinates := make(map[string][][]float32)

	// Iterate through DatesLocations and populate Coordinates
	for key := range datesLocations {

		formattedKey := FormatLocationMaps(key)

		// Call your function to get coordinates based on the location value
		lat, long, err := LocationsToCoordinates(formattedKey)
		if err != nil {
			return err
		}

		// Add coordinates to the map
		coordinates[formattedKey] = [][]float32{{lat, long}}
	}

	// Assign the Coordinates map to the artist
	artist.Coordinates = coordinates

	return nil
}
